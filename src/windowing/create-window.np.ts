// AUTOMATICALLY GENERATED BY NANOPACK. DO NOT MODIFY BY HAND.

import { NanoBufReader, NanoBufWriter, type NanoPackMessage } from "nanopack"

class CreateWindow implements NanoPackMessage {
	public static TYPE_ID = 10

	constructor(
		public title: string,
		public description: string,
		public width: number,
		public height: number,
	) {}

	public static fromBytes(
		bytes: Uint8Array,
	): { bytesRead: number; result: CreateWindow } | null {
		const reader = new NanoBufReader(bytes)

		let ptr = 20

		const titleByteLength = reader.readFieldSize(0)
		const title = reader.readString(ptr, titleByteLength)
		ptr += titleByteLength

		const descriptionByteLength = reader.readFieldSize(1)
		const description = reader.readString(ptr, descriptionByteLength)
		ptr += descriptionByteLength

		const width = reader.readInt32(ptr)
		ptr += 4

		const height = reader.readInt32(ptr)
		ptr += 4

		return {
			bytesRead: ptr,
			result: new CreateWindow(title, description, width, height),
		}
	}

	public get typeId(): number {
		return 10
	}

	public bytes(): Uint8Array {
		const writer = new NanoBufWriter(20)
		writer.writeTypeId(CreateWindow.TYPE_ID)

		const titleByteLength = writer.appendString(this.title)
		writer.writeFieldSize(0, titleByteLength)

		const descriptionByteLength = writer.appendString(this.description)
		writer.writeFieldSize(1, descriptionByteLength)

		writer.appendInt32(this.width)
		writer.writeFieldSize(2, 4)

		writer.appendInt32(this.height)
		writer.writeFieldSize(3, 4)

		return writer.bytes
	}
}

export { CreateWindow }
